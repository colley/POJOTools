package com.ai.tools.dotmatrix;

import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JPanel;

public class DotTest extends JPanel {
	public DotTest() {
	}

	char yi12[] = {
	/* 以下是 '１' 的 12点阵宋体 字模，24 byte */
	0x00, 0x00, 0x0C, 0x00, 0x1C, 0x00, 0x3C, 0x00, 0x0C, 0x00, 0x0C, 0x00,
			0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00,
			0x00, };

	char er12[] = {
	/* 以下是 '２' 的 12点阵宋体 字模，24 byte */
	0x00, 0x00, 0x3E, 0x00, 0x63, 0x00, 0x03, 0x00, 0x06, 0x00, 0x0C, 0x00,
			0x18, 0x00, 0x30, 0x00, 0x63, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00,
			0x00, };

	char dian12[] = {
	/* 以下是 '点' 的 12点阵宋体 字模，24 byte */
	0x04, 0x00, 0x07, 0xC0, 0x04, 0x00, 0x04, 0x00, 0x3F, 0x80, 0x20, 0x80,
			0x20, 0x80, 0x3F, 0x80, 0x00, 0x00, 0x49, 0x40, 0xC9, 0x20, 0x00,
			0x00, };

	char zhen12[] = {
	/* 以下是 '阵' 的 12点阵宋体 字模，24 byte */
	0xF2, 0x00, 0x9F, 0xE0, 0x92, 0x00, 0xA5, 0x00, 0xA5, 0x00, 0x97, 0xE0,
			0x91, 0x00, 0xB1, 0x00, 0x8F, 0xE0, 0x81, 0x00, 0x81, 0x00, 0x00,
			0x00, };

	char song16[] = {
	/* 以下是 '宋' 的 16点阵宋体 字模，32 byte */
	0x02, 0x00, 0x01, 0x00, 0x7F, 0xFE, 0x41, 0x04, 0x81, 0x08, 0x01, 0x00,
			0x7F, 0xFC, 0x03, 0x80, 0x05, 0x80, 0x05, 0x40, 0x09, 0x20, 0x11,
			0x10, 0x21, 0x0E, 0x41, 0x04, 0x01, 0x00, 0x00, 0x00, };

	char ti16[] = {
	/* 以下是 '体' 的 16点阵宋体 字模，32 byte */
	0x10, 0x40, 0x18, 0x40, 0x10, 0x40, 0x20, 0x40, 0x37, 0xFC, 0x60, 0xC0,
			0xA0, 0xE0, 0x21, 0x60, 0x21, 0x50, 0x22, 0x48, 0x24, 0x4E, 0x2B,
			0xF4, 0x20, 0x40, 0x20, 0x40, 0x20, 0x40, 0x00, 0x00, };

	char zi24[] = {
	/* 以下是 '字' 的 24点阵隶书 字模，72 byte */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x08, 0x1C,
			0x10, 0x1F, 0xFF, 0xF0, 0x18, 0x00, 0x30, 0x18, 0xFF, 0x10, 0x09,
			0xC3, 0x90, 0x00, 0x3C, 0x00, 0x00, 0x1C, 0x00, 0x3F, 0xFF, 0xFE,
			0x7E, 0x0C, 0xFE, 0x00, 0x1C, 0x04, 0x00, 0x1C, 0x00, 0x04, 0x3C,
			0x00, 0x03, 0xF8, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, };

	char mo24[] = {
	/* 以下是 '模' 的 24点阵楷体_GB2312 字模，72 byte */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x30, 0x03, 0x0C, 0x20,
			0x03, 0x04, 0x3C, 0x02, 0x07, 0xE0, 0x02, 0x1C, 0x40, 0x02, 0x00,
			0x40, 0x03, 0xC0, 0x70, 0x7E, 0x1F, 0x98, 0x02, 0x08, 0x10, 0x06,
			0x0F, 0x90, 0x07, 0x88, 0x10, 0x0A, 0xCB, 0xE0, 0x1A, 0x05, 0x00,
			0x12, 0x01, 0x1E, 0x22, 0x0F, 0xFE, 0x42, 0x32, 0x80, 0x02, 0x02,
			0x40, 0x02, 0x04, 0x60, 0x02, 0x0C, 0x30, 0x02, 0x18, 0x1C, 0x02,
			0x20, 0x0F, 0x02, 0x00, 0x00, };

	char guan48[] = {
	/* 以下是 '灌' 的 48点阵黑体 字模，288 byte */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x38,
			0x00, 0x03, 0x00, 0x03, 0xC0, 0x38, 0x00, 0x07, 0x80, 0x03, 0xC0,
			0x38, 0x00, 0x07, 0xC0, 0x03, 0xC0, 0x38, 0x00, 0x03, 0xF1, 0xFF,
			0xFF, 0xFF, 0xFC, 0x01, 0xF9, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x79,
			0xF1, 0xC0, 0x39, 0xFC, 0x00, 0x30, 0x01, 0xC0, 0x38, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xFF, 0xF0, 0xFF, 0xE0, 0x00, 0x00, 0xFF, 0xF0, 0xFF,
			0xE0, 0x00, 0x00, 0xE0, 0x70, 0xE0, 0xE0, 0x0E, 0x00, 0xE0, 0x70,
			0xE0, 0xE0, 0x1F, 0x80, 0xE0, 0x70, 0xE0, 0xE0, 0x1F, 0xE0, 0xFF,
			0xF0, 0xFF, 0xE0, 0x07, 0xF0, 0xFF, 0xF0, 0xFF, 0xE0, 0x01, 0xF0,
			0xFF, 0xF1, 0xFF, 0xE0, 0x00, 0x60, 0x08, 0x07, 0x00, 0x00, 0x00,
			0x20, 0x1E, 0x03, 0x80, 0x00, 0x00, 0x00, 0x1E, 0x03, 0x00, 0x00,
			0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFF, 0xFF,
			0xF0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x7C, 0x03,
			0x80, 0x00, 0x00, 0x20, 0x7C, 0x03, 0x80, 0x00, 0x00, 0x70, 0xFC,
			0x03, 0x80, 0x00, 0x00, 0x71, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x73,
			0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0xF3, 0xBC, 0x03, 0x80, 0x60, 0x00,
			0xE3, 0xBC, 0x03, 0x80, 0x00, 0x01, 0xE1, 0x3C, 0x03, 0x80, 0x00,
			0x01, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x01, 0xC0, 0x3F, 0xFF, 0xFF,
			0xE0, 0x03, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x03, 0x80, 0x3C, 0x03,
			0x80, 0x00, 0x07, 0x80, 0x3C, 0x03, 0x80, 0x00, 0x0F, 0x80, 0x3C,
			0x03, 0x80, 0x00, 0x0F, 0x00, 0x3F, 0xFF, 0xFF, 0xF8, 0x1F, 0x00,
			0x3F, 0xFF, 0xFF, 0xF8, 0x1F, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x06,
			0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, };

	char guan64[] = {
	/* 以下是 '灌' 的 64点阵方正黄草简体 字模，512 byte */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
			0xCF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x07, 0xC0, 0x00,
			0x00, 0x00, 0x00, 0x03, 0xF8, 0x07, 0x80, 0x00, 0x00, 0x04, 0x00,
			0x03, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0xF0, 0x18,
			0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 0xF0, 0x30, 0x00, 0x00, 0x00,
			0x07, 0x80, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x01,
			0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x06, 0x00,
			0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x07,
			0xF0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x01,
			0xFF, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00,
			0x00, 0x0C, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x08, 0x00,
			0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0F, 0xF0, 0x07,
			0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x40, 0x0F, 0xC0, 0x00, 0x00,
			0x00, 0x00, 0x18, 0x80, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01,
			0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0xFC, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x06, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x0E, 0x23, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC3,
			0xE0, 0x00, 0x00, 0x00, 0x80, 0x00, 0x1F, 0x87, 0xC0, 0x00, 0x00,
			0x00, 0xC0, 0x00, 0x1F, 0x8F, 0x87, 0x80, 0x00, 0x00, 0x70, 0x02,
			0x0F, 0x9F, 0x0F, 0x80, 0x00, 0x00, 0x7C, 0x02, 0x0F, 0xBE, 0x1C,
			0xE0, 0x00, 0x00, 0x3E, 0x04, 0x07, 0xFC, 0x18, 0xE0, 0x00, 0x00,
			0x3E, 0x04, 0x03, 0xF0, 0x1B, 0xC0, 0x00, 0x00, 0x3E, 0x0C, 0x01,
			0xE0, 0x1F, 0x80, 0x00, 0x00, 0x1C, 0x08, 0x03, 0xC0, 0x1F, 0x00,
			0x00, 0x00, 0x18, 0x18, 0x07, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x18,
			0x38, 0x0F, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x18, 0x30, 0x1F, 0x07,
			0xDC, 0x00, 0x00, 0x00, 0x30, 0x70, 0x3F, 0x1F, 0x0C, 0x00, 0x00,
			0x00, 0x30, 0x70, 0x7B, 0x38, 0x0C, 0x00, 0x00, 0x00, 0x30, 0xE0,
			0xF3, 0x60, 0x0C, 0x00, 0x00, 0x00, 0x30, 0xE1, 0xE3, 0x00, 0x0E,
			0x00, 0x00, 0x00, 0x71, 0xC3, 0xE3, 0x00, 0x3E, 0x00, 0x00, 0x00,
			0x71, 0xC3, 0xC3, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x73, 0x83, 0xC3,
			0x00, 0xCE, 0x00, 0x00, 0x00, 0x77, 0x80, 0x07, 0x00, 0x9E, 0x00,
			0x00, 0x00, 0x77, 0x80, 0x07, 0x00, 0x9C, 0x00, 0x00, 0x00, 0x7F,
			0x00, 0x07, 0x00, 0x9C, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x07, 0x00,
			0xBC, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x07, 0x00, 0xFC, 0x00, 0x00,
			0x00, 0x7E, 0x00, 0x07, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x7C, 0x00,
			0x07, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x06, 0x00, 0xDE,
			0x00, 0x00, 0x00, 0xFC, 0x00, 0x06, 0x00, 0x5C, 0x00, 0x00, 0x01,
			0xF8, 0x00, 0x06, 0x00, 0x78, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x0E,
			0x00, 0x78, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x0E, 0x00, 0xFF, 0xF8,
			0x00, 0x00, 0x78, 0x00, 0x0E, 0x01, 0xFF, 0xB0, 0x00, 0x00, 0x70,
			0x00, 0x06, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, };

	char matarray16k[] = {
	/* 以下是 '该' 的 16点阵楷体_GB2312 字模，32 byte */
	0x00, 0x00, 0x00, 0x00, 0x08, 0x60, 0x08, 0x00, 0x00, 0x0C, 0x03, 0xF0,
			0x18, 0x50, 0x30, 0x90, 0x11, 0x70, 0x11, 0xA8, 0x14, 0x58, 0x18,
			0xB0, 0x13, 0x70, 0x04, 0x8C, 0x03, 0x04, 0x00, 0x00,
			/* 以下是 '程' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0C, 0xFC, 0x3C, 0x88, 0x08,
			0x88, 0x0E, 0x70, 0xF8, 0x18, 0x18, 0xE0, 0x1E, 0x20, 0x28, 0xF0,
			0xC8, 0x20, 0x08, 0x3E, 0x09, 0xC0, 0x08, 0x00, 0x00, 0x00,
			/* 以下是 '序' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x80, 0x00, 0x90, 0x0B, 0xE0, 0x0C, 0x00, 0x0B,
			0xF0, 0x08, 0x40, 0x10, 0x80, 0x11, 0xFC, 0x1E, 0x88, 0x20, 0x80,
			0x20, 0x80, 0x40, 0x80, 0x80, 0x80, 0x01, 0x80, 0x00, 0x80,
			/* 以下是 '已' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x40, 0x00, 0xC0, 0x10,
			0x80, 0x10, 0x80, 0x1F, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x04,
			0x10, 0x04, 0x08, 0x06, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '集' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x02, 0x80, 0x04, 0x10, 0x07, 0xE0, 0x0C, 0xE0, 0x17,
			0x80, 0x05, 0xC0, 0x06, 0xB0, 0x0B, 0x40, 0x08, 0x9C, 0x1F, 0xE0,
			0x23, 0x40, 0x05, 0x30, 0x09, 0x1C, 0x31, 0x00, 0x00, 0x00,
			/* 以下是 '成' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x03, 0x00, 0x01, 0x30, 0x01, 0x10, 0x01, 0x00, 0x01,
			0xC0, 0x1E, 0x80, 0x10, 0x90, 0x12, 0x90, 0x1E, 0x60, 0x12, 0x60,
			0x22, 0x60, 0x26, 0x92, 0x45, 0x0A, 0x00, 0x06, 0x00, 0x00,
			/* 以下是 '小' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
			0x00, 0x01, 0x00, 0x11, 0x18, 0x11, 0x0C, 0x21, 0x04, 0x21, 0x00,
			0x01, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '型' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x08, 0x03, 0x08, 0x1E, 0x28, 0x0A, 0x48, 0x0F,
			0xC8, 0x7A, 0x48, 0x0A, 0x08, 0x12, 0x18, 0x21, 0x08, 0x01, 0x40,
			0x07, 0x80, 0x01, 0x00, 0x01, 0xF8, 0x3E, 0x00, 0x00, 0x00,
			/* 以下是 '汉' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x11, 0xF0, 0x02, 0x20, 0x04,
			0x20, 0x62, 0x40, 0x29, 0x40, 0x10, 0x80, 0x11, 0x40, 0x22, 0x60,
			0x64, 0x38, 0x78, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '字' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x01, 0x00, 0x01, 0x10, 0x11, 0xF8, 0x1E, 0x10, 0x20,
			0xC0, 0x07, 0xC0, 0x00, 0x80, 0x01, 0x38, 0x1F, 0xC0, 0x20, 0x80,
			0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x01, 0x80, 0x00, 0x00,
			/* 以下是 '库' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x01, 0xF0, 0x0E, 0x80, 0x08,
			0xF0, 0x0B, 0x00, 0x09, 0x40, 0x0A, 0x78, 0x13, 0xC0, 0x10, 0x7E,
			0x2F, 0xC0, 0x20, 0x40, 0x40, 0x40, 0x00, 0x40, 0x00, 0x40,
			/* 以下是 '，' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x30, 0x00, 0x10, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00,
			/* 以下是 '可' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x40, 0x00,
			0x20, 0x07, 0x20, 0x19, 0x20, 0x12, 0x20, 0x0E, 0x40, 0x00, 0x40,
			0x00, 0x40, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x40, 0x00, 0x00,
			/* 以下是 '脱' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3D, 0x90, 0x24, 0x80, 0x24,
			0x70, 0x25, 0x90, 0x25, 0x20, 0x35, 0xE0, 0x24, 0xA0, 0x24, 0xC0,
			0x45, 0x42, 0x4E, 0x22, 0x88, 0x3E, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '离' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x03, 0x00, 0x01, 0x30, 0x1F, 0xC0, 0x00, 0xA0, 0x0F,
			0xA0, 0x0A, 0xA0, 0x0F, 0xE0, 0x09, 0x00, 0x03, 0xF8, 0x1E, 0x88,
			0x17, 0xC8, 0x14, 0x88, 0x10, 0x70, 0x10, 0x10, 0x00, 0x00,
			/* 以下是 '文' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x02, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x70, 0x07,
			0x80, 0x18, 0x80, 0x01, 0x80, 0x05, 0x00, 0x03, 0x00, 0x03, 0x00,
			0x04, 0xC0, 0x38, 0x70, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '件' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x08, 0x40, 0x0C, 0x40, 0x08, 0x40, 0x11, 0x40, 0x11,
			0xF0, 0x32, 0x40, 0x50, 0x44, 0x91, 0xF8, 0x12, 0x40, 0x10, 0x40,
			0x10, 0x40, 0x10, 0x40, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '的' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0C, 0x20, 0x08, 0x40, 0x10,
			0x48, 0x1E, 0xFC, 0x23, 0x0C, 0x24, 0x8C, 0x3C, 0x48, 0x24, 0x08,
			0x24, 0x08, 0x3C, 0x08, 0x00, 0x38, 0x00, 0x18, 0x00, 0x00,
			/* 以下是 '支' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xE0, 0x0F,
			0x00, 0x01, 0x00, 0x01, 0xC0, 0x0E, 0x40, 0x08, 0x80, 0x06, 0x80,
			0x01, 0x00, 0x02, 0xC0, 0x0C, 0x78, 0x30, 0x1C, 0x00, 0x00,
			/* 以下是 '持' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x08, 0x20, 0x08, 0x20, 0x08, 0x20, 0x08, 0x70, 0x3C,
			0x20, 0x08, 0x3E, 0x0F, 0xD0, 0x08, 0x1C, 0x3B, 0xF0, 0xC9, 0x10,
			0x08, 0x90, 0x08, 0x10, 0x18, 0x10, 0x00, 0x30, 0x00, 0x00,
			/* 以下是 '运' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x11, 0x80, 0x00, 0x00, 0x00,
			0x78, 0x27, 0x80, 0x71, 0x80, 0x21, 0x20, 0x22, 0xF0, 0x23, 0x10,
			0x20, 0x00, 0x5F, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00,
			/* 以下是 '行' 的 16点阵楷体_GB2312 字模，32 byte */
			0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0C, 0x38, 0x10, 0x40, 0x24,
			0x00, 0x04, 0x1F, 0x0B, 0xF0, 0x18, 0x10, 0x28, 0x10, 0xC8, 0x10,
			0x08, 0x10, 0x08, 0x10, 0x08, 0x70, 0x00, 0x20, 0x00, 0x00, };

	public void drawFont(Graphics g,String str) {

		/*drawmat(yi12, g, 12, 50, 20, new Color(0xFFFFFF));
		drawmat(er12, g, 12, 50, 50, new Color(0xFFFFFF));
		drawmat(dian12, g, 12, 50, 80, new Color(0xFFFFFF));
		drawmat(zhen12, g, 12, 50, 110, new Color(0xFFFFFF));
		drawmat(song16, g, 16, 50, 130, new Color(0xFF0000));
		drawmat(ti16, g, 16, 50, 150, new Color(0xFF0000));
		drawmat(zi24, g, 24, 50, 180, new Color(0x0000FF));
		drawmat(mo24, g, 24, 50, 200, new Color(0x00FF00));
		drawmat(guan48, g, 48, 50, 250, new Color(0x0000FF));*/
		byte[] s = str.getBytes();
		char[] c = new char[s.length];
		for(int i=0;i<s.length;i++){
			c[i] = (char) s[i];
		}
		drawmat(c , g, 64, 50, 300, new Color(0xFF0000));
	}

	void drawmat(char[] mat, Graphics g, int matsize, int x, int y, Color color)
	/* 依次：字模指针、点阵大小、起始坐标(x,y)、颜色 */
	{
		int i, j, k, n;
		n = (matsize - 1) / 8 + 1;
		for (j = 0; j < matsize; j++) {
			for (i = 0; i < n; i++) {
				for (k = 0; k < 8; k++) {
					if (!((mat[j * n + i] & (0x80 >> k)) == 0)) /* 测试为1的位则显示 */
					{
						g.setColor(color);
						g.drawLine(x + i * 8 + k, y + j, x + i * 8 + k, y + j);
						// putpixel(x + i * 8 + k, y + j, color);
					}
					// else
					// g.setColor(0xFFFFFF);
				}
			}
		}
	}
	protected void paintComponent(Graphics g) {
		drawFont(g,"中国");
	}
}