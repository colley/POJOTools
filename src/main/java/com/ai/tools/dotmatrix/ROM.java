package com.ai.tools.dotmatrix;
/**
 * 记录字模数据
 * @author yxt
 *
 */
public class ROM {
	private static final int BITS=8;//一个字节的位数
	public static final int[][] rom={{0x00,0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00},/*"0",0*/

	{0x00,0x00,0x00,0x10,0x70,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00},/*"1",1*/
	
	{0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x04,0x04,0x08,0x10,0x20,0x42,0x7E,0x00,0x00},/*"2",2*/
	
	{0x00,0x00,0x00,0x3C,0x42,0x42,0x04,0x18,0x04,0x02,0x02,0x42,0x44,0x38,0x00,0x00},/*"3",3*/
	
	{0x00,0x00,0x00,0x04,0x0C,0x14,0x24,0x24,0x44,0x44,0x7E,0x04,0x04,0x1E,0x00,0x00},/*"4",4*/
	
	{0x00,0x00,0x00,0x7E,0x40,0x40,0x40,0x58,0x64,0x02,0x02,0x42,0x44,0x38,0x00,0x00},/*"5",5*/
	
	{0x00,0x00,0x00,0x1C,0x24,0x40,0x40,0x58,0x64,0x42,0x42,0x42,0x24,0x18,0x00,0x00},/*"6",6*/
	
	{0x00,0x00,0x00,0x7E,0x44,0x44,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00},/*"7",7*/
	
	{0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x42,0x3C,0x00,0x00},/*"8",8*/
	
	{0x00,0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x26,0x1A,0x02,0x02,0x24,0x38,0x00,0x00},/*"9",9*/
	
	{0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00},/*":",10*/
	
	};
	/**
	 * 将字模数据存入指定位置的地图数组
	 * 
	 * @param map 显示的地图数组
	 * @param idx 写入到第几个字，索引从0开始
	 * @param rom 字模数据
	 */
	public static void romToDisplay(int[][] map,int[] rom,int idx){
		int index=idx*BITS;
		for (int i = 0; i < ClockPanel.ROWS; i++) {
			for (int k = 0; k < rom.length; k++) {
				intToBit(map[k],index,rom[k]);
			}
		}
	}
	static void intToBit(int[] writeTo,int off,int data){
		for (int j = BITS-1; j >= 0; j--) {//一个字节8个位
			writeTo[j+off]=data&0x01;//低字节先出来
			data>>=1;
		}
	}
}
